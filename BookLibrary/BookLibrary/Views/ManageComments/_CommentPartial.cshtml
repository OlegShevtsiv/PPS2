@using Microsoft.AspNetCore.Identity;
@using Services.Interfaces;
@using Services.Filters;

@inject ICommentService commentServive
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager


@model BookLibrary.ViewModels.ManageComments.CommentedEssenceViewModel

<h3 class="mt-5">Add your comment</h3>
@if (SignInManager.IsSignedIn(User))
{
    <form asp-action="AddComment" asp-controller="ManageComments" method="post">
        <div class="form-group">
            <input type="hidden" name="ownerId" value="@((await UserManager.GetUserAsync(User)).Id)" />
        </div>
        <div class="form-group">
            <input type="hidden" name="essenceId" value="@Model.EssenceId" />
        </div>
        <div class="form-group">
            <input type="hidden" name="isBook" value="@Model.isBook.ToString()" />
        </div>
        <div class="form-group">
            <textarea class="form-control" name="text" required rows="5"></textarea>
        </div>
        <div class="form-group">
            <input type="submit" value="Comment" class="btn btn-success" />
        </div>
    </form>
}
else
{
    <form asp-action="AddComment" asp-controller="ManageComments" method="post">
        <div class="form-group">
            <textarea class="form-control" disabled rows="5"></textarea>
        </div>
        <div class="form-group">
            <input type="submit" value="Comment" class="btn btn-success" />
        </div>
    </form>
}

<hr style="border-width: 3px; border-color: grey;" />
<h3>All Comments</h3>
@foreach (var c in commentServive.Get(new CommentFilter { CommentedEssenceId = Model.EssenceId }).OrderByDescending(c => c.Time))
{
    <div class="row">
        @if ((SignInManager.IsSignedIn(User)) && ((await UserManager.GetUserAsync(User)).Id == c.OwnerId))
        {
            <div class="col-lg-12">

                <p>
                    <b><ins style="color:dodgerblue">You</ins></b>  <em style="color:dimgrey">@c.Time</em>
                </p>

                <div class="col-lg-11">
                    <form asp-action="EditComment" asp-controller="ManageComments" method="post">
                        <div class="form-group">
                            <input type="hidden" name="id" value="@c.Id" />
                        </div>
                        <div class="form-group">
                            <input type="hidden" name="ownerId" value="@((await UserManager.GetUserAsync(User)).Id)" />
                        </div>
                        <div class="form-group">
                            <input type="hidden" name="essenceId" value="@Model.EssenceId" />
                        </div>
                        <div class="form-group">
                            <input type="hidden" name="isBook" value="@Model.isBook.ToString()" />
                        </div>
                        <div class="form-group">
                            <input type="hidden" name="time" value="@c.Time.ToString()" />
                        </div>
                        <div class="form-group">
                            <textarea class="form-control" name="text">@c.Text</textarea>
                        </div>
                        <div class="form-group">
                            <input type="submit" value="Edit" class="btn btn-sm btn-success" />
                        </div>
                    </form>
                </div>
                <div class="col-lg-1">
                    <form asp-action="DeleteComment" asp-controller="ManageComments" method="post">
                        @*asp-route-id="@c.Id"*@
                        <div class="form-group">
                            <input type="hidden" name="comentId" value="@c.Id" />
                        </div>
                        <div class="form-group">
                            <input type="hidden" name="essenceId" value="@Model.EssenceId" />
                        </div>
                        <div class="form-group">
                            <input type="hidden" name="isBook" value="@Model.isBook.ToString()" />
                        </div>
                        <button type="submit" class="btn btn-sm btn-danger">
                            Delete
                        </button>
                    </form>
                </div>
            </div>
        }
        else if ((SignInManager.IsSignedIn(User)) &&
        (await UserManager.IsInRoleAsync((await UserManager.GetUserAsync(User)), "user admin")) &&
        !(await UserManager.IsInRoleAsync((await UserManager.GetUserAsync(User)), "library admin")))
        {

            @if ((await UserManager.IsInRoleAsync((UserManager.Users.First(u => u.Id == c.OwnerId)), "user admin")) &&
   (await UserManager.IsInRoleAsync((UserManager.Users.First(u => u.Id == c.OwnerId)), "library admin")))
            {
                <div class="col-lg-11">
                    <p><ins style="color:black">@((UserManager.Users.First(u => u.Id == c.OwnerId)).UserName)</ins>  <em style="color:dimgrey">@c.Time</em></p>
                    <div class="form-group">
                        <p class="h4 text-secondary border px-3 py-2 rounded">@c.Text</p>
                    </div>
                </div>
            }
            else if ((await UserManager.IsInRoleAsync((UserManager.Users.First(u => u.Id == c.OwnerId)), "user admin")))
            {
                <div class="col-lg-11">
                    <p style="color:firebrick">
                        <ins style="color:black">@((UserManager.Users.First(u => u.Id == c.OwnerId)).UserName)</ins> User admin  <em style="color:dimgrey">@c.Time</em>
                    </p>
                    <div class="form-group">
                        <p class="h4 text-secondary border px-3 py-2 rounded">@c.Text</p>
                    </div>
                </div>
            }
            else
            {
                <div class="col-lg-12">
                    @if ((await UserManager.IsInRoleAsync((UserManager.Users.First(u => u.Id == c.OwnerId)), "library admin")))
                    {
                        <p style="color: seagreen">
                            <ins style="color:black">@((UserManager.Users.First(u => u.Id == c.OwnerId)).UserName)</ins> Library admin <em style="color:dimgrey">@c.Time</em>
                        </p>

                    }
                    else
                    {
                        <p style="color:dimgrey"><ins>@((UserManager.Users.First(u => u.Id == c.OwnerId)).UserName)</ins> <em>@c.Time</em></p>
                    }
                    <div class="col-lg-11">
                        <div class="form-group">
                            <p class="h4 text-secondary border px-3 py-2 rounded">@c.Text</p>
                        </div>
                    </div>
                    <div class="col-lg-1">
                        <form asp-action="DeleteComment" asp-controller="ManageComments" method="post">
                            <div class="form-group">
                                <input type="hidden" name="comentId" value="@c.Id" />
                            </div>
                            <div class="form-group">
                                <input type="hidden" name="essenceId" value="@Model.EssenceId" />
                            </div>
                            <div class="form-group">
                                <input type="hidden" name="isBook" value="@Model.isBook.ToString()" />
                            </div>
                            <button type="submit" class="btn btn-sm btn-danger">
                                Delete
                            </button>
                        </form>
                    </div>
                </div>
            }
        }
        else if ((SignInManager.IsSignedIn(User)) &&
        (await UserManager.IsInRoleAsync((await UserManager.GetUserAsync(User)), "user admin")) &&
        (await UserManager.IsInRoleAsync((await UserManager.GetUserAsync(User)), "library admin")))
        {

            <div class="col-lg-12">
                @if ((await UserManager.IsInRoleAsync((UserManager.Users.First(u => u.Id == c.OwnerId)), "user admin")))
                {
                    <p style="color: firebrick">
                <ins style="color:black">@((UserManager.Users.First(u => u.Id == c.OwnerId)).UserName)</ins> User admin <em style="color:dimgrey">@c.Time</em>
                    </p>
                }
                else if ((await UserManager.IsInRoleAsync((UserManager.Users.First(u => u.Id == c.OwnerId)), "library admin")))
                {
                    <p style="color: seagreen">
                <ins style="color:black">@((UserManager.Users.First(u => u.Id == c.OwnerId)).UserName)</ins> Library admin <em style="color:dimgrey">@c.Time</em>
                    </p>
                }
                else
                {
                    <p style="color:dimgrey"><ins>@((UserManager.Users.First(u => u.Id == c.OwnerId)).UserName)</ins> <em>@c.Time</em></p>
                }
                <div class="col-lg-11">
                    <div class="form-group">
                        <p class="h4 text-secondary border px-3 py-2 rounded">@c.Text</p>
                    </div>
                </div>
                <div class="col-lg-1">
                    <form asp-action="DeleteComment" asp-controller="ManageComments" method="post">
                        <div class="form-group">
                            <input type="hidden" name="comentId" value="@c.Id" />
                        </div>
                        <div class="form-group">
                            <input type="hidden" name="essenceId" value="@Model.EssenceId" />
                        </div>
                        <div class="form-group">
                            <input type="hidden" name="isBook" value="@Model.isBook.ToString()" />
                        </div>
                        <button type="submit" class="btn btn-sm btn-danger">
                            Delete
                        </button>
                    </form>
                </div>
            </div>

        }
        else
        {
            @if ((await UserManager.IsInRoleAsync((UserManager.Users.First(u => u.Id == c.OwnerId)), "user admin")) ||
   (await UserManager.IsInRoleAsync((UserManager.Users.First(u => u.Id == c.OwnerId)), "library admin")))
            {
                <div class="col-lg-11">
                    <p style="color: red"><ins style="color:black">@((UserManager.Users.First(u => u.Id == c.OwnerId)).UserName)</ins> Admin <em style="color:dimgrey">@c.Time</em></p>
                </div>
            }
            else
            {
                <div class="col-lg-11">
                    <p style="color:dimgrey"><ins>@((UserManager.Users.First(u => u.Id == c.OwnerId)).UserName)</ins> <em>@c.Time</em></p>
                </div>
            }
            <div class="col-lg-11">
                <div class="form-group">
                    <p class="h4 text-secondary border px-3 py-2 rounded">@c.Text</p>
                </div>
            </div>
        }

    </div>
    <hr style="border-width: 2px; border-color: grey;" />

}